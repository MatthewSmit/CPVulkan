#pragma once
#define VULKAN_H_ 1
#include <vulkan/vulkan.h>

#include <limits>

#if defined(VK_USE_PLATFORM_WIN32_KHR)
#undef VK_KHR_external_semaphore_fd
#undef VK_KHR_external_fence_fd
#endif

#undef VK_EXT_pci_bus_info // We are not on a PCI bus
#undef VK_NV_glsl_shader // Deprecated

// External memory would not work as we are in-process
#undef VK_KHR_external_memory_fd
#undef VK_EXT_external_memory_dma_buf
#undef VK_EXT_external_memory_host
#undef VK_KHR_external_memory
#undef VK_KHR_external_memory_win32
#undef VK_KHR_external_memory_capabilities
#undef VK_NV_external_memory
#undef VK_NV_external_memory_win32
#undef VK_NV_external_memory_capabilities

#undef VK_EXT_hdr_metadata // Win32 does not support HDR

#define CV_DEBUG_NONE 0
#define CV_DEBUG_LOG 1
#define CV_DEBUG_IMAGE 2
#define CV_DEBUG_LEVEL CV_DEBUG_LOG

constexpr auto VULKAN_VERSION = VK_API_VERSION_1_1;

constexpr auto ROBUST_BUFFER_ACCESS = true;
constexpr auto FULL_DRAW_INDEX_UINT32 = true;
constexpr auto IMAGE_CUBE_ARRAY = true;
constexpr auto INDEPENDENT_BLEND = true;
constexpr auto GEOMETRY_SHADER = false; // TODO
constexpr auto TESSELLATION_SHADER = false; // TODO
constexpr auto SAMPLE_RATE_SHADING = true;
constexpr auto DUAL_SOURCE_BLEND = true;
constexpr auto LOGIC_OPERATION = true;
constexpr auto MULTI_DRAW_INDIRECT = true;
constexpr auto DRAW_INDIRECT_FIRST_INSTANCE = true;
constexpr auto DEPTH_CLAMP = true;
constexpr auto DEPTH_BIAS_CLAMP = true;
constexpr auto FILL_MODE_NON_SOLID = true;
constexpr auto DEPTH_BOUNDS = true;
constexpr auto WIDE_LINES = true;
constexpr auto LARGE_POINTS = true;
constexpr auto ALPHA_TO_ONE = true;
constexpr auto MULTI_VIEWPORT = false;
constexpr auto SAMPLER_ANISOTROPY = false; // TODO
constexpr auto TEXTURE_COMPRESSION_ETC2 = false; // TODO
constexpr auto TEXTURE_COMPRESSION_ASTC_LDR = false; // TODO
constexpr auto TEXTURE_COMPRESSION_BC = false; // TODO
constexpr auto OCCLUSION_QUERY_PRECISE = true;
constexpr auto PIPELINE_STATISTICS_QUERY = true;
constexpr auto VERTEX_PIPELINE_STORES_AND_ATOMICS = true;
constexpr auto FRAGMENT_STORES_AND_ATOMICS = true;
constexpr auto SHADER_TESSELLATION_AND_GEOMETRY_POINT_SIZE = true;
constexpr auto SHADER_IMAGE_GATHER_EXTENDED = true;
constexpr auto SHADER_STORAGE_IMAGE_EXTENDED_FORMATS = true;
constexpr auto SHADER_STORAGE_IMAGE_MULTISAMPLE = true;
constexpr auto SHADER_STORAGE_IMAGE_READ_WITHOUT_FORMAT = true;
constexpr auto SHADER_STORAGE_IMAGE_WRITE_WITHOUT_FORMAT = true;
constexpr auto SHADER_UNIFORM_BUFFER_ARRAY_DYNAMIC_INDEXING = true;
constexpr auto SHADER_SAMPLED_IMAGE_ARRAY_DYNAMIC_INDEXING = true;
constexpr auto SHADER_STORAGE_BUFFER_ARRAY_DYNAMIC_INDEXING = true;
constexpr auto SHADER_STORAGE_IMAGE_ARRAY_DYNAMIC_INDEXING = true;
constexpr auto SHADER_CLIP_DISTANCE = true;
constexpr auto SHADER_CULL_DISTANCE = true;
constexpr auto SHADER_FLOAT64 = true;
constexpr auto SHADER_INT64 = true;
constexpr auto SHADER_INT16 = true;
constexpr auto SHADER_RESOURCE_RESIDENCY = true;
constexpr auto SHADER_RESOURCE_MIN_LOD = true;
constexpr auto SPARSE_BINDING = true;
constexpr auto VARIABLE_MULTISAMPLE_RATE = true;
constexpr auto INHERITED_QUERIES = true;

static_assert(GEOMETRY_SHADER || !MULTI_VIEWPORT);
static_assert(VULKAN_VERSION < VK_VERSION_1_0 || ROBUST_BUFFER_ACCESS);

constexpr auto ULP = 1.0f / (2 << 4);

constexpr auto VENDOR_ID = 0x10000;
constexpr auto DEVICE_ID = 0;
constexpr auto DEVICE_TYPE = VK_PHYSICAL_DEVICE_TYPE_CPU;
constexpr auto DEVICE_NAME = "CPVulkan";
constexpr uint8_t PIPELINE_CACHE_UUID[VK_UUID_SIZE]{};
constexpr auto MAX_IMAGE_DIMENSION_1D = 4096;
constexpr auto MAX_IMAGE_DIMENSION_2D = 4096;
constexpr auto MAX_IMAGE_DIMENSION_3D = 256;
constexpr auto MAX_IMAGE_DIMENSION_CUBE = 4096;
constexpr auto MAX_IMAGE_ARRAY_LAYERS = 256;
constexpr auto MAX_TEXEL_BUFFER_ELEMENTS = 65536;
constexpr auto MAX_UNIFORM_BUFFER_RANGE = 16384;
constexpr auto MAX_STORAGE_BUFFER_RANGE = 134217728;
constexpr auto MAX_PUSH_CONSTANTS_SIZE = 128;
constexpr auto MAX_MEMORY_ALLOCATION_COUNT = 4096;
constexpr auto MAX_SAMPLER_ALLOCATION_COUNT = 4000;
constexpr auto BUFFER_IMAGE_GRANULARITY = 1;
constexpr auto SPARSE_ADDRESS_SPACE_SIZE = std::numeric_limits<size_t>::max();
constexpr auto MAX_BOUND_DESCRIPTOR_SETS = 4;
constexpr auto MAX_PER_STAGE_DESCRIPTOR_SAMPLERS = 32;
constexpr auto MAX_PER_STAGE_DESCRIPTOR_UNIFORM_BUFFERS = 32;
constexpr auto MAX_PER_STAGE_DESCRIPTOR_STORAGE_BUFFERS = 32;
constexpr auto MAX_PER_STAGE_DESCRIPTOR_SAMPLED_IMAGES = 32;
constexpr auto MAX_PER_STAGE_DESCRIPTOR_STORAGE_IMAGES = 32;
constexpr auto MAX_PER_STAGE_DESCRIPTOR_INPUT_ATTACHMENTS = 32;
constexpr auto MAX_PER_STAGE_RESOURCES = 128;
constexpr auto MAX_DESCRIPTOR_SET_SAMPLERS = MAX_PER_STAGE_DESCRIPTOR_SAMPLERS * 8;
constexpr auto MAX_DESCRIPTOR_SET_UNIFORM_BUFFERS = MAX_PER_STAGE_DESCRIPTOR_UNIFORM_BUFFERS * 8;
constexpr auto MAX_DESCRIPTOR_SET_UNIFORM_BUFFERS_DYNAMIC = 8;
constexpr auto MAX_DESCRIPTOR_SET_STORAGE_BUFFERS = MAX_PER_STAGE_DESCRIPTOR_STORAGE_BUFFERS * 8;
constexpr auto MAX_DESCRIPTOR_SET_STORAGE_BUFFERS_DYNAMIC = 4;
constexpr auto MAX_DESCRIPTOR_SET_SAMPLED_IMAGES = MAX_PER_STAGE_DESCRIPTOR_SAMPLED_IMAGES * 8;
constexpr auto MAX_DESCRIPTOR_SET_STORAGE_IMAGES = MAX_PER_STAGE_DESCRIPTOR_STORAGE_IMAGES * 8;
constexpr auto MAX_DESCRIPTOR_SET_INPUT_ATTACHMENTS = MAX_PER_STAGE_DESCRIPTOR_INPUT_ATTACHMENTS;
constexpr auto MAX_VERTEX_INPUT_ATTRIBUTES = 16;
constexpr auto MAX_VERTEX_INPUT_BINDINGS = 16;
constexpr auto MAX_VERTEX_INPUT_ATTRIBUTE_OFFSET = 2047;
constexpr auto MAX_VERTEX_INPUT_BINDING_STRIDE = 2048;
constexpr auto MAX_VERTEX_OUTPUT_COMPONENTS = 64;
constexpr auto MAX_TESSELLATION_GENERATION_LEVEL = 64;
constexpr auto MAX_TESSELLATION_PATCH_SIZE = 32;
constexpr auto MAX_TESSELLATION_CONTROL_PER_VERTEX_INPUT_COMPONENTS = 64;
constexpr auto MAX_TESSELLATION_CONTROL_PER_VERTEX_OUTPUT_COMPONENTS = 64;
constexpr auto MAX_TESSELLATION_CONTROL_PER_PATCH_OUTPUT_COMPONENTS = 120;
constexpr auto MAX_TESSELLATION_CONTROL_TOTAL_OUTPUT_COMPONENTS = 2048;
constexpr auto MAX_TESSELLATION_EVALUATION_INPUT_COMPONENTS = 64;
constexpr auto MAX_TESSELLATION_EVALUATION_OUTPUT_COMPONENTS = 64;
constexpr auto MAX_GEOMETRY_SHADER_INVOCATIONS = 32;
constexpr auto MAX_GEOMETRY_INPUT_COMPONENTS = 64;
constexpr auto MAX_GEOMETRY_OUTPUT_COMPONENTS = 64;
constexpr auto MAX_GEOMETRY_OUTPUT_VERTICES = 256;
constexpr auto MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 1024;
constexpr auto MAX_FRAGMENT_INPUT_COMPONENTS = 64;
constexpr auto MAX_FRAGMENT_OUTPUT_ATTACHMENTS = 8;
constexpr auto MAX_FRAGMENT_DUAL_SOURCE_ATTACHMENTS = 1;
constexpr auto MAX_FRAGMENT_COMBINED_OUTPUT_RESOURCES = 8;
constexpr auto MAX_COMPUTE_SHARED_MEMORY_SIZE = 16384;
constexpr uint32_t MAX_COMPUTE_WORK_GROUP_COUNT[3]{65535, 65535, 65535};
constexpr auto MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 128;
constexpr uint32_t MAX_COMPUTE_WORK_GROUP_SIZE[3]{128, 128, 64};
constexpr auto SUB_PIXEL_PRECISION_BITS = 4;
constexpr auto SUB_TEXEL_PRECISION_BITS = 4;
constexpr auto MIPMAP_PRECISION_BITS = 4;
constexpr auto MAX_DRAW_INDEXED_INDEX_VALUE = 0xFFFFFFFF;
constexpr auto MAX_DRAW_INDIRECT_COUNT = 0xFFFF;
constexpr auto MAX_SAMPLER_LOD_BIAS = 2.0f;
constexpr auto MAX_SAMPLER_ANISOTROPY = 16.0f;
constexpr auto MAX_VIEWPORTS = 16;
constexpr uint32_t MAX_VIEWPORT_DIMENSIONS[2]{4096, 4096};
constexpr float VIEWPORT_BOUNDS_RANGE[2]{-8192, 8192};
constexpr auto VIEWPORT_SUB_PIXEL_BITS = 0;
constexpr auto MIN_MEMORY_MAP_ALIGNMENT = 64;
constexpr auto MIN_TEXEL_BUFFER_OFFSET_ALIGNMENT = 16;
constexpr auto MIN_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 256;
constexpr auto MIN_STORAGE_BUFFER_OFFSET_ALIGNMENT = 256;
constexpr auto MIN_TEXEL_OFFSET = -8;
constexpr auto MAX_TEXEL_OFFSET = 7;
constexpr auto MIN_TEXEL_GATHER_OFFSET = -8;
constexpr auto MAX_TEXEL_GATHER_OFFSET = 7;
constexpr auto MIN_INTERPOLATION_OFFSET = -0.5;
constexpr auto MAX_INTERPOLATION_OFFSET = 0.5f - ULP;
constexpr auto SUB_PIXEL_INTERPOLATION_OFFSET_BITS = 4;
constexpr auto MAX_FRAMEBUFFER_WIDTH = 4096;
constexpr auto MAX_FRAMEBUFFER_HEIGHT = 4096;
constexpr auto MAX_FRAMEBUFFER_LAYERS = 256;
constexpr auto FRAMEBUFFER_COLOUR_SAMPLE_COUNTS = VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT | VK_SAMPLE_COUNT_32_BIT | VK_SAMPLE_COUNT_64_BIT;
constexpr auto FRAMEBUFFER_DEPTH_SAMPLE_COUNTS = VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT | VK_SAMPLE_COUNT_32_BIT | VK_SAMPLE_COUNT_64_BIT;
constexpr auto FRAMEBUFFER_STENCIL_SAMPLE_COUNTS = VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT | VK_SAMPLE_COUNT_32_BIT | VK_SAMPLE_COUNT_64_BIT;
constexpr auto FRAMEBUFFER_NO_ATTACHMENTS_SAMPLE_COUNTS = VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT | VK_SAMPLE_COUNT_32_BIT | VK_SAMPLE_COUNT_64_BIT;
constexpr auto MAX_COLOUR_ATTACHMENTS = 8;
constexpr auto SAMPLED_IMAGE_COLOUR_SAMPLE_COUNTS = VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT | VK_SAMPLE_COUNT_32_BIT | VK_SAMPLE_COUNT_64_BIT;
constexpr auto SAMPLED_IMAGE_INTEGER_SAMPLE_COUNTS = VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT | VK_SAMPLE_COUNT_32_BIT | VK_SAMPLE_COUNT_64_BIT;
constexpr auto SAMPLED_IMAGE_DEPTH_SAMPLE_COUNTS = VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT | VK_SAMPLE_COUNT_32_BIT | VK_SAMPLE_COUNT_64_BIT;
constexpr auto SAMPLED_IMAGE_STENCIL_SAMPLE_COUNTS = VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT | VK_SAMPLE_COUNT_32_BIT | VK_SAMPLE_COUNT_64_BIT;
constexpr auto STORAGE_IMAGE_SAMPLE_COUNTS = VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT | VK_SAMPLE_COUNT_32_BIT | VK_SAMPLE_COUNT_64_BIT;
constexpr auto MAX_SAMPLE_MASK_WORDS = 1;
constexpr auto TIMESTAMP_COMPUTE_AND_GRAPHICS = true;
constexpr auto TIMESTAMP_PERIOD = 1;
constexpr auto MAX_CLIP_DISTANCES = 8;
constexpr auto MAX_CULL_DISTANCES = 8;
constexpr auto MAX_COMBINED_CLIP_AND_CULL_DISTANCES = 8;
constexpr auto DISCRETE_QUEUE_PRIORITIES = 2;
constexpr float POINT_SIZE_RANGE[2]{1.0f, 64.0f - ULP};
constexpr float LINE_WIDTH_RANGE[2]{1.0f, 8.0f - ULP};
constexpr auto POINT_SIZE_GRANULARITY = LARGE_POINTS ? 1 : 0;
constexpr auto LINE_WIDTH_GRANULARITY = WIDE_LINES ? 1 : 0;
constexpr auto STRICT_LINES = true;
constexpr auto STANDARD_SAMPLE_LOCATIONS = true;
constexpr auto OPTIMAL_BUFFER_COPY_OFFSET_ALIGNMENT = 16;
constexpr auto OPTIMAL_BUFFER_COPY_ROW_PITCH_ALIGNMENT = 16;
constexpr auto NON_COHERENT_ATOM_SIZE = 256;
constexpr auto SPARSE_RESIDENCY_STANDARD_2D_BLOCK_SHAPE = false;
constexpr auto SPARSE_RESIDENCY_STANDARD_2D_MULTISAMPLE_BLOCK_SHAPE = false;
constexpr auto SPARSE_RESIDENCY_STANDARD_3D_BLOCK_SHAPE = false;
constexpr auto SPARSE_RESIDENCY_ALIGNED_MIP_SIZE = false;
constexpr auto SPARSE_RESIDENCY_NON_RESIDENT_STRICT = false;

static_assert(MAX_FRAGMENT_OUTPUT_ATTACHMENTS == MAX_COLOUR_ATTACHMENTS);
static_assert(MAX_FRAGMENT_COMBINED_OUTPUT_RESOURCES >= MAX_FRAGMENT_OUTPUT_ATTACHMENTS);

constexpr auto PIPELINE_GRAPHICS = 0;
constexpr auto PIPELINE_COMPUTE = 1;

#if defined(VK_NV_ray_tracing)
constexpr auto MAX_PIPELINES = 3;
constexpr auto PIPELINE_RAYTRACE = 2;
#else
constexpr auto MAX_PIPELINES = 2;
#endif